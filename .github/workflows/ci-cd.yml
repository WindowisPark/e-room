name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - main  # main 브랜치로 풀 리퀘스트 시 실행

jobs:
  lint:
    runs-on: ubuntu-latest  # Ubuntu 환경에서 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # 코드 체크아웃

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"  # Python 버전 지정

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        run: |
          pip install black flake8  # Linting 도구 설치
          black --check .  # 코드 포맷팅 검사
          flake8 .  # 코드 스타일 검사

  build:
    needs: lint  # Linting 작업이 성공한 후 실행
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t e-room-backend -f docker/backend/Dockerfile .

  deploy:
    needs: build  # 빌드 작업이 성공한 후 실행
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag e-room-backend ${{ secrets.DOCKER_HUB_USERNAME }}/e-room-backend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/e-room-backend:latest
